{"version":3,"sources":["components/ProductCard.jsx","utils/helpers.js","components/CustomSelect.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","minWidth","minHeight","bullet","display","margin","transform","title","fontSize","pos","marginBottom","ProductCard","text","length","name","description","furniture_style","delivery","price","classes","Grid","item","sm","xs","Card","className","CardContent","container","direction","justify","style","fontWeight","color","num","delimiter","str","toString","split","replace","join","commafy","textAlign","substring","map","index","textDecoration","CustomSelect","options","label","handleChange","selected","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","width","theme","formControl","spacing","maxWidth","chips","flexWrap","chip","noLabel","marginTop","FormControl","InputLabel","id","Select","labelId","multiple","onChange","value","input","Input","renderValue","MenuItem","key","ListItemText","primary","Checkbox","checked","indexOf","App","useState","products","data","setData","selectedStyle","deliveryTime","state","setState","useEffect","fetch","then","response","json","catch","err","alert","target","filter","includes","time","day","delivery_time","height","backgroundColor","furniture_styles","Container","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.d5a334a3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { strTrimmer, commafy } from \"../utils/helpers\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    minHeight: \"25vh\"\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\"\r\n  },\r\n  title: {\r\n    fontSize: 14\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  }\r\n});\r\n\r\nconst ProductCard = ({\r\n  name,\r\n  description,\r\n  furniture_style,\r\n  delivery,\r\n  price\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid item sm={6} xs={12}>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <Grid container direction=\"row\" justify=\"space-between\">\r\n            <Grid item style={{ fontWeight: \"bold\", fontSize: 18 }}>\r\n              {name}\r\n            </Grid>\r\n            <Grid item style={{ color: \"#ff9800\", fontWeight: \"bold\" }}>\r\n              Rp. {commafy(price, \".\")}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container style={{ margin: \"7px 0px\", textAlign: \"justify\" }}>\r\n            <Grid item>{strTrimmer(description, 144)}</Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item style={{ color: \"#448cd4\" }}>\r\n              {furniture_style.map((item, index) => {\r\n                let text = `${item}, `;\r\n                if (index + 1 === furniture_style.length) {\r\n                  text = `${item}.`;\r\n                }\r\n                return text;\r\n              })}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid\r\n              item\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                color: \"#448cd4\",\r\n                textDecoration: \"underline\"\r\n              }}\r\n            >\r\n              {delivery > 1 ? `${delivery} Days` : `${delivery} Day`}\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","export function commafy(num, delimiter) {\r\n    if (!num) {\r\n        return 0;\r\n    }\r\n    var str = num.toString().split(\".\");\r\n    if (str[0].length >= 5) {\r\n        str[0] = str[0].replace(/(\\d)(?=(\\d{3})+$)/g, \"$1\" + delimiter || \",\");\r\n    }\r\n    if (str[1] && str[1].length >= 5) {\r\n        str[1] = str[1].replace(/(\\d{3})/g, \"$1 \");\r\n    }\r\n    return str.join(delimiter || \".\");\r\n}\r\n\r\nexport function strTrimmer(text, length) {\r\n    return text.length > length ? text.substring(0, length) + \"...\" : text;\r\n}","import React from \"react\";\r\nimport {\r\n  FormControl,\r\n  Select,\r\n  Checkbox,\r\n  MenuItem,\r\n  ListItemText,\r\n  InputLabel,\r\n  Input\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomSelect = ({ options, label, handleChange, selected, name }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: \"35%\",\r\n      maxWidth: \"35%\"\r\n    },\r\n    chips: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\"\r\n    },\r\n    chip: {\r\n      margin: 2\r\n    },\r\n    noLabel: {\r\n      marginTop: theme.spacing(3)\r\n    }\r\n  }));\r\n\r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250\r\n      }\r\n    }\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <FormControl className={classes.formControl}>\r\n      <InputLabel id=\"demo-mutiple-checkbox-label\">{label}</InputLabel>\r\n      <Select\r\n        labelId=\"demo-mutiple-checkbox-label\"\r\n        id=\"demo-mutiple-checkbox\"\r\n        name={name}\r\n        multiple\r\n        onChange={handleChange}\r\n        value={selected}\r\n        input={<Input />}\r\n        renderValue={selected => selected.join(\", \")}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {options.map(name => {\r\n          return (\r\n            <MenuItem key={name} value={name}>\r\n              <ListItemText primary={name} />\r\n              <Checkbox checked={selected.indexOf(name) > -1} />\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CustomSelect;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport ProductCard from \"./components/ProductCard\";\nimport Select from \"./components/CustomSelect\";\n\nfunction App() {\n  const [data, setData] = useState({ products: [] });\n  const [state, setState] = useState({\n    selectedStyle: [],\n    deliveryTime: []\n  });\n\n  useEffect(() => {\n    fetch(\"https://www.mocky.io/v2/5c9105cb330000112b649af8\")\n      .then(response => response.json())\n      .then(data => setData(data))\n      .catch(err => alert(err));\n  }, []);\n\n  const handleChange = ({ target: { value, name } }) => {\n    setState({ ...state, [name]: value });\n  };\n\n  let deliveryTime = [\"1 Week\", \"2 Weeks\", \"1 Month\"];\n  let products =\n    data.products &&\n    data.products\n      .filter(item => {\n        if (state.selectedStyle.length === 0) return true;\n        let sameStyle = item.furniture_style.filter(style =>\n          state.selectedStyle.includes(style)\n        );\n\n        return sameStyle.length > 0 ? item : false;\n      })\n      .filter(item => {\n        if (state.deliveryTime.length === 0) return true;\n        let deliveryTime = state.deliveryTime.filter(time => {\n          let day =\n            time === \"1 Week\"\n              ? 7\n              : time === \"2 Weeks\"\n              ? 14\n              : time === \"1 Month\"\n              ? 30\n              : 0;\n\n          return item.delivery_time <= day ? true : false;\n        });\n\n        return deliveryTime.length > 0 ? item : false;\n      });\n  return (\n    <div className=\"App\">\n      <Grid\n        container\n        justify=\"center\"\n        style={{\n          width: \"100%\",\n          height: \"15vh\",\n          backgroundColor: \"#106cc8\",\n          marginBottom: \"30px\"\n        }}\n      >\n        <Select\n          name=\"selectedStyle\"\n          options={data.furniture_styles || []}\n          label=\"Furniture Style\"\n          selected={state.selectedStyle}\n          handleChange={handleChange}\n        />\n        <Select\n          name=\"deliveryTime\"\n          options={deliveryTime || []}\n          label=\"Delivery Time\"\n          selected={state.deliveryTime}\n          handleChange={handleChange}\n        />\n      </Grid>\n      <Container>\n        <Grid container justify=\"space-between\" spacing={3}>\n          {products.map((item, index) => {\n            return (\n              <ProductCard\n                key={index}\n                name={item.name}\n                description={item.description}\n                furniture_style={item.furniture_style}\n                delivery={item.delivery_time}\n                price={item.price}\n              />\n            );\n          })}\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}